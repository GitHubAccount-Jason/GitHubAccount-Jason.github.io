<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>nothing</title>
    <link href="/2024/01/13/nothing/"/>
    <url>/2024/01/13/nothing/</url>
    
    <content type="html"><![CDATA[<h2 id="这是无聊时写的，多是摘录"><a href="#这是无聊时写的，多是摘录" class="headerlink" title="这是无聊时写的，多是摘录"></a>这是无聊时写的，多是摘录</h2><p> —— 你给的强大，是我最坚固的铠甲 </p><p>还是回归了 vscode 的怀抱，CoCopilot真好用</p><blockquote><p>歧路或末路，终将一同抵达 ——《王座之下》</p></blockquote><blockquote><p>我听过 云上的风 如歌咏<br>也撑过 船压星河 载月色 —— 《是梦囚我》</p></blockquote><blockquote></blockquote><p>…</p><p>about:<br>喜欢的歌手和音乐制作人</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>羽肿</td><td>Windy Hill (经典啊)</td></tr><tr><td>盛云泽</td><td>光遇· 系列</td></tr><tr><td>Plum <sub>(adofai厨谁不爱呢)</sub></td><td>All</td></tr><tr><td>林俊杰</td><td>无拘，修炼爱情</td></tr><tr><td>周杰伦</td><td>红尘客栈</td></tr><tr><td>陈粒</td><td>光</td></tr><tr><td>吴青峰</td><td>我们都拥有海洋</td></tr><tr><td>洛少爷 <sub>(我坚信ta是女的)</sub></td><td>是梦囚我，貂蝉，盐甜汽水</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024.1.1</title>
    <link href="/2024/01/01/2024-1-1/"/>
    <url>/2024/01/01/2024-1-1/</url>
    
    <content type="html"><![CDATA[<h1 id="这是我无聊时写的，没甚意义"><a href="#这是我无聊时写的，没甚意义" class="headerlink" title="这是我无聊时写的，没甚意义"></a>这是我无聊时写的，没甚意义</h1><h3 id="Q-这篇文章主要讲了什么？"><a href="#Q-这篇文章主要讲了什么？" class="headerlink" title="Q:这篇文章主要讲了什么？"></a>Q:这篇文章主要讲了什么？</h3><h3 id="A-关于LazyVim的整套安装"><a href="#A-关于LazyVim的整套安装" class="headerlink" title="A:关于LazyVim的整套安装"></a>A:关于LazyVim的整套安装</h3><p>好的，开始吧</p><h2 id="等等，在开始前…"><a href="#等等，在开始前…" class="headerlink" title="等等，在开始前…"></a>等等，在开始前…</h2><table><thead><tr><th>工具</th><th>怎样获得</th></tr></thead><tbody><tr><td>一个合适的工具（可选）</td><td>如果无从下手，可以去<a href="neovim.io">neovim.io</a>仔细看看，或许有惊喜？</td></tr><tr><td>Git</td><td><a href="https://github.com/git-for-windows/git/releases/download/v2.43.0.windows.1/Git-2.43.0-64-bit.exe">https://github.com/git-for-windows/git/releases/download/v2.43.0.windows.1/Git-2.43.0-64-bit.exe</a></td></tr><tr><td>Neovim</td><td><code>winget install Neovim.Neovim</code>(没有winget请从Microsoft Store下载)</td></tr><tr><td>nodejs</td><td><a href="https://nodejs.org/dist/v21.5.0/node-v21.5.0-x64.msi">https://nodejs.org/dist/v21.5.0/node-v21.5.0-x64.msi</a></td></tr><tr><td>LLVM</td><td><a href="https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/LLVM-17.0.6-win64.exe">https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/LLVM-17.0.6-win64.exe</a>  注意加bin入环境变量哦</td></tr></tbody></table><p>现在，你应该做完了这一切<br>运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/LazyVim/starter <span class="hljs-variable">$env</span>:LOCALAPPDATA\nvim<br></code></pre></td></tr></table></figure><p><strong>注意</strong>: 如果你没有合适的工具（上文所指），请自行 <code>git clone https://github.com/LazyVim/LazyVim</code> 至AppData\Local\nvim<br>然后启动: nvim</p><p>然后，如果你装备了合适的工具，可能会看到一个插件管理器，疯狂的下载插件，等就完了<br>找到C:\Users\Administrator\AppData\Local\nvim\lua, 新建handlers.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> vim.g.started_by_firenvim <span class="hljs-keyword">then</span><br>  <span class="hljs-comment">-- Configure lsp information display style</span><br>  <span class="hljs-keyword">local</span> M = &#123;&#125;<br><br>  M.setup = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span><br>    <span class="hljs-comment">-- replace the lsp info symbol</span><br>    <span class="hljs-keyword">local</span> signs = &#123;<br>      &#123; name = <span class="hljs-string">&quot;DiagnosticSignError&quot;</span>, text = <span class="hljs-string">&quot;&quot;</span> &#125;,<br>      &#123; name = <span class="hljs-string">&quot;DiagnosticSignWarn&quot;</span>, text = <span class="hljs-string">&quot;&quot;</span> &#125;,<br>      &#123; name = <span class="hljs-string">&quot;DiagnosticSignHint&quot;</span>, text = <span class="hljs-string">&quot;&quot;</span> &#125;,<br>      &#123; name = <span class="hljs-string">&quot;DiagnosticSignInfo&quot;</span>, text = <span class="hljs-string">&quot;&quot;</span> &#125;,<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> _, sign <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(signs) <span class="hljs-keyword">do</span><br>      vim.fn.sign_define(sign.name, &#123; texthl = sign.name, text = sign.text, numhl = <span class="hljs-string">&quot;&quot;</span> &#125;)<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-comment">-- set the style of lsp info</span><br>    <span class="hljs-keyword">local</span> <span class="hljs-built_in">config</span> = &#123;<br>      <span class="hljs-comment">-- disable virtual text</span><br>      <span class="hljs-comment">-- the message show after the current line.</span><br>      virtual_text = <span class="hljs-literal">true</span>,<br>      <span class="hljs-comment">-- show signs</span><br>      signs = &#123;<br>        active = signs,<br>      &#125;,<br>      <span class="hljs-comment">-- update_in_insert = true,</span><br>      underline = <span class="hljs-literal">true</span>,<br>      severity_sort = <span class="hljs-literal">true</span>,<br>      float = &#123;<br>        focusable = <span class="hljs-literal">false</span>,<br>        style = <span class="hljs-string">&quot;minimal&quot;</span>,<br>        border = <span class="hljs-string">&quot;rounded&quot;</span>,<br>        source = <span class="hljs-string">&quot;always&quot;</span>,<br>        header = <span class="hljs-string">&quot;&quot;</span>,<br>        prefix = <span class="hljs-string">&quot;&quot;</span>,<br>      &#125;,<br>    &#125;<br><br>    vim.diagnostic.<span class="hljs-built_in">config</span>(<span class="hljs-built_in">config</span>)<br><br>    <span class="hljs-comment">-- set the popup window border</span><br>    vim.lsp.handlers[<span class="hljs-string">&quot;textDocument/hover&quot;</span>] = vim.lsp.with(vim.lsp.handlers.hover, &#123;<br>      border = <span class="hljs-string">&quot;rounded&quot;</span>,<br>    &#125;)<br><br>    vim.lsp.handlers[<span class="hljs-string">&quot;textDocument/signatureHelp&quot;</span>] = vim.lsp.with(vim.lsp.handlers.signature_help, &#123;<br>      border = <span class="hljs-string">&quot;rounded&quot;</span>,<br>    &#125;)<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">local</span> current_path = <span class="hljs-built_in">debug</span>.<span class="hljs-built_in">getinfo</span>(<span class="hljs-number">1</span>).source:<span class="hljs-built_in">sub</span>(<span class="hljs-number">2</span>)<br>  <span class="hljs-keyword">local</span> current_dir = current_path:<span class="hljs-built_in">match</span>(<span class="hljs-string">&quot;(.*/)&quot;</span>)<br>  <span class="hljs-built_in">package</span>.<span class="hljs-built_in">path</span> = <span class="hljs-built_in">package</span>.<span class="hljs-built_in">path</span> .. <span class="hljs-string">&quot;;&quot;</span> .. current_dir .. <span class="hljs-string">&quot;?.lua;&quot;</span> .. current_dir .. <span class="hljs-string">&quot;language/?.lua&quot;</span><br>  <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;clangd&quot;</span>)<br>  <span class="hljs-keyword">return</span> M<br></code></pre></td></tr></table></figure><p>新建language文件夹<br>新建clangd.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">local</span> capabilities = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cmp_nvim_lsp&#x27;</span>).default_capabilities()<br><span class="hljs-comment">-- Replace &lt;YOUR_LSP_SERVER&gt; with each lsp server you&#x27;ve enabled.</span><br><span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;lspconfig&#x27;</span>)[<span class="hljs-string">&#x27;clangd&#x27;</span>].setup &#123;<br>  root_dir = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(fname)</span></span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">[[</span><br><span class="hljs-string">        &#x27;.clangd&#x27;,</span><br><span class="hljs-string">        &#x27;.clang-tidy&#x27;,</span><br><span class="hljs-string">        &#x27;.clang-format&#x27;,</span><br><span class="hljs-string">        &#x27;compile_commands.json&#x27;,</span><br><span class="hljs-string">        &#x27;compile_flags.txt&#x27;,</span><br><span class="hljs-string">        &#x27;configure.ac&#x27;,</span><br><span class="hljs-string">        &#x27;.git&#x27;,</span><br><span class="hljs-string">-- 这里替换为你的compile_flags</span><br><span class="hljs-string">        &#x27;D:/SH_Directory/compile_flags.txt&#x27;,</span><br><span class="hljs-string">      ]]</span><br>  <span class="hljs-keyword">end</span>,<br>  cmd = &#123;<br>    <span class="hljs-string">&quot;clangd&quot;</span>,<br>    <span class="hljs-string">&quot;--clang-tidy&quot;</span>,<br>    <span class="hljs-string">&quot;--completion-style=bundled&quot;</span>,<br>    <span class="hljs-string">&quot;--function-arg-placeholders=false&quot;</span>,<br>    <span class="hljs-string">&quot;--ranking-model=heuristics&quot;</span>,<br>    <span class="hljs-string">&quot;--header-insertion=never&quot;</span>,<br>    <span class="hljs-string">&quot;--pch-storage=memory&quot;</span>,<br>    <span class="hljs-string">&quot;--log=error&quot;</span>,<br>    <span class="hljs-string">&quot;--j=4&quot;</span>,<br>    <span class="hljs-string">&quot;--background-index&quot;</span>,<br>    <span class="hljs-string">&quot;--query-driver=g++&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>关于compile_flags.txt:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-std=c++2a</span><br><span class="hljs-deletion">--target=x86_64-pc-windows-gnu</span><br><span class="hljs-deletion">-xc++</span><br><span class="hljs-deletion">-static</span><br><span class="hljs-deletion">-Wimplicit-function-declaration</span><br><span class="hljs-deletion">--driver-mode=g++</span><br><span class="hljs-deletion">-I</span><br>./<br><span class="hljs-deletion">-isystem</span><br>(D:/SH_Directory/MinGW/mingw64)/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++<br></code></pre></td></tr></table></figure><p>最后小括号内替换为你的MinGW路径<br>在C:\Users\Administrator\AppData\Local\nvim\init.lua里添加</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;handlers&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
